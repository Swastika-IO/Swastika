// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sio.Cms.Lib.Models.Cms;

namespace Sio.Cms.Lib.Migrations
{
    [DbContext(typeof(SioCmsContext))]
    partial class SioCmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioArticle", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Excerpt");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("ntext");

                    b.Property<string>("Icon");

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(4000);

                    b.Property<string>("SetAttributeData")
                        .HasColumnType("ntext");

                    b.Property<int?>("SetAttributeId");

                    b.Property<string>("Source")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.Property<int>("Type");

                    b.Property<int?>("Views");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("SetAttributeId");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_article");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioArticleMedia", b =>
                {
                    b.Property<int>("MediaId");

                    b.Property<int>("ArticleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MediaId", "ArticleId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("MediaId", "Specificulture");

                    b.ToTable("sio_article_media");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioArticleModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("ArticleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ModuleId", "ArticleId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.ToTable("sio_article_module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioCmsUser", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(450);

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Username")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("sio_cms_user");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioComment", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int?>("ArticleId");

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<string>("FullName")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsReviewed");

                    b.Property<bool?>("IsVisible");

                    b.Property<int?>("OrderId");

                    b.Property<int>("Priority");

                    b.Property<int?>("ProductId");

                    b.Property<double?>("Rating");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("OrderId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("sio_comment");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioConfiguration", b =>
                {
                    b.Property<string>("Keyword")
                        .HasMaxLength(250);

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Category")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DataType");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value");

                    b.HasKey("Keyword", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_configuration");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioCopy", b =>
                {
                    b.Property<string>("Culture")
                        .HasMaxLength(10);

                    b.Property<string>("Keyword")
                        .HasMaxLength(250);

                    b.Property<string>("Note")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value");

                    b.HasKey("Culture", "Keyword");

                    b.ToTable("sio_copy");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioCulture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("FullName")
                        .HasMaxLength(150);

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<string>("Lcid")
                        .HasColumnName("LCID")
                        .HasMaxLength(50);

                    b.Property<int>("Priority");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("Specificulture")
                        .IsUnique()
                        .HasName("IX_Sio_Culture");

                    b.ToTable("sio_culture");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioCustomer", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(450);

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasMaxLength(250);

                    b.Property<bool>("IsAgreeNotified");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserId")
                        .HasMaxLength(256);

                    b.Property<string>("Username")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("sio_customer");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FolderType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ThemeId");

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.ToTable("sio_file");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioLanguage", b =>
                {
                    b.Property<string>("Keyword")
                        .HasMaxLength(250);

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Category")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DataType");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(250);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value");

                    b.HasKey("Keyword", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_language");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioMedia", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileProperties")
                        .HasMaxLength(4000);

                    b.Property<long>("FileSize");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(400);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.HasKey("Id", "Specificulture");

                    b.ToTable("sio_media");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModule", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Fields")
                        .HasMaxLength(4000);

                    b.Property<string>("FormTemplate")
                        .HasMaxLength(4000);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PageSize");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('0')");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleArticle", b =>
                {
                    b.Property<int>("ArticleId");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ArticleId", "ModuleId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.ToTable("sio_module_article");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleAttributeSet", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int?>("ArticleId");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fields")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Value");

                    b.HasKey("Id", "ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "CategoryId", "Specificulture")
                        .HasName("IX_sio_module_attribute_set_ModuleId_PageId_Specificulture");

                    b.ToTable("sio_module_attribute_set");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleAttributeValue", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("AttributeSetId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int>("DataType");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.Property<int>("Width");

                    b.HasKey("Id", "AttributeSetId", "Specificulture");

                    b.HasIndex("AttributeSetId", "ModuleId", "Specificulture");

                    b.ToTable("sio_module_attribute_value");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleData", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50);

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int?>("ArticleId");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fields")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int>("Priority");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Value");

                    b.HasKey("Id", "ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "CategoryId", "Specificulture")
                        .HasName("IX_sio_module_data_ModuleId_PageId_Specificulture");

                    b.HasIndex("ModuleId", "ProductId", "Specificulture");

                    b.ToTable("sio_module_data");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleProduct", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProductId", "ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("sio_module_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioOrder", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId");

                    b.Property<int>("Status");

                    b.Property<int>("StoreId");

                    b.Property<string>("UserId")
                        .HasMaxLength(50);

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_order");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioOrderItem", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("OrderId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<int>("Id");

                    b.Property<double>("Price");

                    b.Property<string>("PriceUnit")
                        .HasMaxLength(50);

                    b.Property<int>("Quantity");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProductId", "OrderId", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.HasIndex("Id", "Specificulture")
                        .IsUnique()
                        .HasName("AK_sio_order_item_Id_Specificulture");

                    b.HasIndex("OrderId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("sio_order_item");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CssClass")
                        .HasMaxLength(50);

                    b.Property<string>("Excerpt");

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Layout")
                        .HasMaxLength(50);

                    b.Property<int?>("Level");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("PageSize");

                    b.Property<int>("Priority");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(4000);

                    b.Property<string>("SetAttributeData")
                        .HasColumnType("ntext");

                    b.Property<int?>("SetAttributeId");

                    b.Property<string>("StaticUrl")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.Property<int>("Type");

                    b.Property<int?>("Views");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("SetAttributeId");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_page");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPageArticle", b =>
                {
                    b.Property<int>("ArticleId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int?>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ArticleId", "CategoryId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_sio_page_article_PageId_Specificulture");

                    b.ToTable("sio_page_article");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPageModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ModuleId", "CategoryId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_sio_page_module_PageId_Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.ToTable("sio_page_module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPagePage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ParentId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id", "ParentId", "Specificulture");

                    b.HasIndex("Id", "Specificulture");

                    b.HasIndex("ParentId", "Specificulture");

                    b.ToTable("sio_page_page");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPagePosition", b =>
                {
                    b.Property<int>("PositionId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("PositionId", "CategoryId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_sio_page_position_PageId_Specificulture");

                    b.ToTable("sio_page_position");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPageProduct", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProductId", "CategoryId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_sio_page_product_PageId_Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("sio_page_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioParameter", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("Description");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Name");

                    b.ToTable("sio_parameter");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(450);

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<int>("Level");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("TextDefault")
                        .HasMaxLength(250);

                    b.Property<string>("TextKeyword")
                        .HasMaxLength(250);

                    b.Property<string>("Url")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("sio_portal_page");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPageNavigation", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ParentId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id", "ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("sio_portal_page_navigation");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPagePosition", b =>
                {
                    b.Property<int>("PositionId");

                    b.Property<int>("PortalPageId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("PositionId", "PortalPageId");

                    b.HasIndex("PortalPageId");

                    b.ToTable("sio_portal_page_position");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPageRole", b =>
                {
                    b.Property<string>("RoleId");

                    b.Property<int>("PageId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("RoleId", "PageId");

                    b.HasIndex("PageId");

                    b.ToTable("sio_portal_page_role");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("sio_position");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioProduct", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(N'')")
                        .HasMaxLength(50);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<double?>("DealPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("Discount");

                    b.Property<string>("Excerpt");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("ntext");

                    b.Property<string>("Icon");

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<double>("ImportPrice");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .HasMaxLength(250);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<double>("NormalPrice");

                    b.Property<int>("PackageCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Price");

                    b.Property<int>("Priority");

                    b.Property<string>("PrivacyId")
                        .HasMaxLength(10);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(4000);

                    b.Property<string>("SetAttributeData")
                        .HasColumnType("ntext");

                    b.Property<int?>("SetAttributeId");

                    b.Property<string>("Source")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.Property<int>("TotalSaled");

                    b.Property<int>("Type");

                    b.Property<string>("Unit")
                        .HasMaxLength(50);

                    b.Property<int?>("Views");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("SetAttributeId");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioProductMedia", b =>
                {
                    b.Property<int>("MediaId");

                    b.Property<int>("ProductId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MediaId", "ProductId", "Specificulture");

                    b.HasIndex("MediaId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("sio_product_media");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioProductModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("ProductId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ModuleId", "ProductId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("sio_product_module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioRelatedArticle", b =>
                {
                    b.Property<int>("SourceId");

                    b.Property<int>("DestinationId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(450);

                    b.Property<string>("Image")
                        .HasMaxLength(450);

                    b.Property<int>("Priority");

                    b.Property<int>("Status");

                    b.HasKey("SourceId", "DestinationId", "Specificulture");

                    b.HasIndex("DestinationId", "Specificulture");

                    b.HasIndex("SourceId", "Specificulture");

                    b.ToTable("sio_related_article");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioRelatedProduct", b =>
                {
                    b.Property<int>("SourceId");

                    b.Property<int>("DestinationId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(450);

                    b.Property<string>("Image")
                        .HasMaxLength(450);

                    b.Property<int>("Priority");

                    b.Property<int>("Status");

                    b.HasKey("SourceId", "DestinationId", "Specificulture");

                    b.HasIndex("DestinationId", "Specificulture");

                    b.HasIndex("SourceId", "Specificulture");

                    b.ToTable("sio_related_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioSetAttribute", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(350);

                    b.Property<string>("Fields")
                        .IsRequired();

                    b.Property<int>("Priority");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("sio_set_attribute");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FolderType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("MobileContent")
                        .HasColumnType("ntext");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<string>("Scripts")
                        .HasColumnType("ntext");

                    b.Property<string>("SpaContent")
                        .HasColumnType("ntext");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Styles")
                        .HasColumnType("ntext");

                    b.Property<int>("ThemeId");

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ThemeId")
                        .HasName("IX_sio_template_file_TemplateId");

                    b.ToTable("sio_template");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PreviewUrl")
                        .HasMaxLength(450);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("sio_theme");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioUrlAlias", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Alias")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<int>("Priority");

                    b.Property<string>("SourceId")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('0')");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("sio_url_alias");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioArticle", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioSetAttribute", "SetAttribute")
                        .WithMany("SioArticle")
                        .HasForeignKey("SetAttributeId")
                        .HasConstraintName("FK_sio_article_sio_set_attribute");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioArticle")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Article_Sio_Culture")
                        .HasPrincipalKey("Specificulture");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioArticleMedia", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "SioArticle")
                        .WithMany("SioArticleMedia")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_sio_article_media_sio_article");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioMedia", "SioMedia")
                        .WithMany("SioArticleMedia")
                        .HasForeignKey("MediaId", "Specificulture")
                        .HasConstraintName("FK_sio_article_media_sio_media");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioArticleModule", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "SioArticle")
                        .WithMany("SioArticleModule")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Article_Module_Sio_Article");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioArticleModule")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Article_Module_Sio_Module1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioComment", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "SioArticle")
                        .WithMany("SioComment")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_sio_comment_sio_article");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioOrder", "SioOrder")
                        .WithMany("SioComment")
                        .HasForeignKey("OrderId", "Specificulture")
                        .HasConstraintName("FK_sio_comment_sio_order");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioComment")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_sio_comment_sio_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioConfiguration", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioConfiguration")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Configuration_Sio_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioFile", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioTheme", "Theme")
                        .WithMany("SioFile")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_sio_file_sio_template");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioLanguage", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioLanguage")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Language_Sio_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModule", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioModule")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Module_Sio_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleArticle", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "SioArticle")
                        .WithMany("SioModuleArticle")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Article_Sio_Article");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioModuleArticle")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Article_Sio_Module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleAttributeSet", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioModuleAttributeSet")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Attribute_set_Sio_Module")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticleModule", "SioArticleModule")
                        .WithMany("SioModuleAttributeSet")
                        .HasForeignKey("ModuleId", "ArticleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Attribute_set_Sio_Article_Module");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPageModule", "SioPageModule")
                        .WithMany("SioModuleAttributeSet")
                        .HasForeignKey("ModuleId", "CategoryId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Attribute_set_Sio_Page_Module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleAttributeValue", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModuleAttributeSet", "SioModuleAttributeSet")
                        .WithMany("SioModuleAttributeValue")
                        .HasForeignKey("AttributeSetId", "ModuleId", "Specificulture")
                        .HasConstraintName("FK_sio_module_attribute_value_sio_module_attribute_set")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleData", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioModuleData")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Data_Sio_Module")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPageModule", "SioPageModule")
                        .WithMany("SioModuleData")
                        .HasForeignKey("ModuleId", "CategoryId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Data_Sio_Page_Module");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticleModule", "SioArticleModule")
                        .WithMany("SioModuleData")
                        .HasForeignKey("ModuleId", "ProductId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Data_Sio_Product_Module");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioModuleProduct", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioModuleProduct")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Product_Sio_Module");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioModuleProduct")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Sio_Module_Product_Sio_Product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioOrder", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCustomer", "Customer")
                        .WithMany("SioOrder")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_sio_order_sio_cms_customer");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioOrderItem", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioOrder", "SioOrder")
                        .WithMany("SioOrderItem")
                        .HasForeignKey("OrderId", "Specificulture")
                        .HasConstraintName("FK_Order_Item_Order");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioOrderItem")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Order_Item_Product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPage", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioSetAttribute", "SetAttribute")
                        .WithMany("SioPage")
                        .HasForeignKey("SetAttributeId")
                        .HasConstraintName("FK_sio_page_sio_set_attribute");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioPage")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Page_Sio_Culture")
                        .HasPrincipalKey("Specificulture");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPageArticle", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "SioArticle")
                        .WithMany("SioPageArticle")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Article_Sio_Article");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPage", "SioPage")
                        .WithMany("SioPageArticle")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Article_Sio_Page");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPageModule", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPage", "SioPage")
                        .WithMany("SioPageModule")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Module_Sio_Page");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioPageModule")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Menu_Module_Sio_Module1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPagePage", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPage", "SioPage")
                        .WithMany("SioPagePageSioPage")
                        .HasForeignKey("Id", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Page_Sio_Page");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPage", "SioPageNavigation")
                        .WithMany("SioPagePageSioPageNavigation")
                        .HasForeignKey("ParentId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Page_Sio_Page1");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPagePosition", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPosition", "Position")
                        .WithMany("SioPagePosition")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Sio_Page_Position_Sio_Position")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPage", "SioPage")
                        .WithMany("SioPagePosition")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Position_Sio_Page");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPageProduct", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPage", "SioPage")
                        .WithMany("SioPageProduct")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Product_Sio_Page");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioPageProduct")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Sio_Page_Product_Sio_Product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPageNavigation", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPortalPage", "IdNavigation")
                        .WithMany("SioPortalPageNavigationIdNavigation")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_sio_portal_page_navigation_sio_portal_page");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPortalPage", "Parent")
                        .WithMany("SioPortalPageNavigationParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_sio_portal_page_navigation_sio_portal_page1");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPagePosition", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPortalPage", "PortalPage")
                        .WithMany("SioPortalPagePosition")
                        .HasForeignKey("PortalPageId")
                        .HasConstraintName("FK_Sio_PortalPage_Position_Sio_PortalPage");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPosition", "Position")
                        .WithMany("SioPortalPagePosition")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Sio_PortalPage_Position_Sio_Position")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioPortalPageRole", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioPortalPage", "Page")
                        .WithMany("SioPortalPageRole")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_sio_portal_page_role_sio_portal_page")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioProduct", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioSetAttribute", "SetAttribute")
                        .WithMany("SioProduct")
                        .HasForeignKey("SetAttributeId")
                        .HasConstraintName("FK_sio_product_sio_set_attribute");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioProduct")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Product_Sio_Culture")
                        .HasPrincipalKey("Specificulture");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioProductMedia", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioMedia", "SioMedia")
                        .WithMany("SioProductMedia")
                        .HasForeignKey("MediaId", "Specificulture")
                        .HasConstraintName("FK_sio_product_media_sio_media");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioProductMedia")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_sio_product_media_sio_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioProductModule", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioModule", "SioModule")
                        .WithMany("SioProductModule")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Sio_Product_Module_Sio_Module1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioProductModule")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Sio_Product_Module_Sio_Product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioRelatedArticle", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "SioArticle")
                        .WithMany("SioRelatedArticleSioArticle")
                        .HasForeignKey("DestinationId", "Specificulture")
                        .HasConstraintName("FK_sio_related_article_sio_article1");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioArticle", "S")
                        .WithMany("SioRelatedArticleS")
                        .HasForeignKey("SourceId", "Specificulture")
                        .HasConstraintName("FK_sio_related_article_sio_article");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioRelatedProduct", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "SioProduct")
                        .WithMany("SioRelatedProductSioProduct")
                        .HasForeignKey("DestinationId", "Specificulture")
                        .HasConstraintName("FK_sio_related_product_sio_product1");

                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioProduct", "S")
                        .WithMany("SioRelatedProductS")
                        .HasForeignKey("SourceId", "Specificulture")
                        .HasConstraintName("FK_sio_related_product_sio_product");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioTemplate", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioTheme", "Theme")
                        .WithMany("SioTemplate")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_sio_template_sio_theme");
                });

            modelBuilder.Entity("Sio.Cms.Lib.Models.Cms.SioUrlAlias", b =>
                {
                    b.HasOne("Sio.Cms.Lib.Models.Cms.SioCulture", "SpecificultureNavigation")
                        .WithMany("SioUrlAlias")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Sio_Url_Alias_Sio_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
